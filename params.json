{"name":"簡易量子コンピュータシミュレータ","tagline":"量子コンピュータの簡単なシミュレータです。レポート作成を目的としています。","body":"# qc2texについて\r\n\r\n## 説明\r\nc2texは、アセンブリ風の量子回路の記述から、量子回路図、量子回路の振る舞いのシミュレーションを行うものです。  \r\nレポート用のtexファイルを作成します。  \r\n独自実装の文字式演算アルゴリズムを搭載しています。  \r\n想定しているいくつかの量子回路が正常に動作することを目的として制作されています。そのためいくつか問題のある実装も目立ちます。  \r\n\r\n## 利用方法\r\nperl qc.pl in.txt > out.texの様に使ってください。  \r\n/sample/内には他のサンプルコードもいくつか存在します。  \r\ntest.sh・test.batにより多少作業を自動化できます。\r\n\r\n## スクリーンショット\r\n![screen1](sample/output/sample.png)\r\n## 入力ファイルの書き方\r\n```\r\n#サンプル用量子回路。\r\n\r\n#ここでは、このプログラムでの量子回路の記述方法を説明します。\r\n#まず、基本的な事として、命令やUNDEF等は大文字のみです。小文字だと認識しません。\r\n#から始まる行はコメントとして無視されます。\r\n\r\nDEF 0 0\r\nDEF 1 1\r\nDEF 2 0\r\n#ここでは量子ビットを定義しています。古典量子ビットを定義する方法は用意されていません。\r\n#文法は\r\n#DEF (ビット名) (初期値)\r\n#です。\r\n#ビット名は任意の英数文字列で名前を設定出来ます。\r\n#初期値は0、1、UNDEFのみです。UNDEFの場合は適宜文字が割り当てられます。\r\n\r\nHGATE 0\r\n#?GATE(?は、任意の英字です。あらかじめHXYZは定義されています。)はユニタリゲートです。文法は\r\n#?GATE (適用先ビット名)\r\n#です。\r\n\r\nCNOT 1 0\r\n#CNOTは見ての通りCNOTゲートです。文法は、\r\n#CNOT (制御ビット名) (適用先ビット名)\r\n#です。\r\n\r\n#CXGATE 1 0\r\n#未実装の制御ユニタリゲートです。認識しますが正常動作しません。文法は\r\n#C?GATE (適用先ビット名) (制御ビット名)\r\n#です。実装が面倒なのは分母なしで定義されているユニタリ行列を適用した時に、適用されていないビットにその分母に当たる数を乗算するのが大変だからです。\r\n#つまり、自乗の和のルートを扱えないために起こる問題です。\r\n#今回の実装ではオブジェクト指向を用いず、文字列で式を表現しているために起こる問題です。\r\n\r\nOBS 1\r\n#古典測定ゲートです。\r\n#この時点でビット1は量子ビットから古典ビットになります。\r\n#内部ではビットは番号によって管理されています。\r\n#この命令により量子ビットのリストからビット「1」は削除され、新たに古典ビットにビット「1」が追加されます。\r\n#古典ビットには量子ビット向けの命令は適用されません。ただし、誤って適用してもエラーが出ない可能性もあります。\r\n#誤った場合は量子回路図を見れば分かるので、訂正は簡単です。\r\n\r\n#OBS命令を適用後は、Case毎にどの値を観測した場合かによって複数の場合に対応する結果が出力されます。\r\n#先にOBS命令を適用した法がCase_01等で後に(今回は1)表示されます。\r\nOBS 2\r\n\r\nCCZGATE 1 0\r\n#古典制御ユニタリゲートです。文法は\r\n#CC?GATE (制御ビット名) (適用先ビット名)\r\n#です。当然制御ビットは古典ビット、適用先ビットは量子ビットである必要があります。\r\n\r\nBFE 0\r\nIFE 0\r\n#BFEはビットフリップエラーで、IFEは位相フリップエラーです。文法は、\r\n#BFE (適用先ビット名)、IFE (適用先ビット名)\r\n#です。\r\n\r\nAND 1 1 2\r\nOR 1 1 2\r\nNOT 1 2\r\n#古典ビットに対するAND、OR、NOT演算です。文法は、\r\n#AND (出力先ビット名) (演算用ビット1) (演算用ビット2)\r\n#OR (出力先ビット名) (演算用ビット1) (演算用ビット2)\r\n#NOT (出力先ビット名) (演算用ビット1)\r\n#です。ただし、古典ビットを定義する手段は用意されていないので、どうしても古典ビットが足りない場合は、DEFの後OBSをしてください。\r\n#複雑な演算は想定されていません。複雑な演算を行った場合、結果の表示が複雑になり混乱を来すからです。\r\n#また、古典ビットの計算結果毎にパターン分けを行い計算している事から、ライン数が増える事が即計算量の増大に繋がるのも問題です。\r\n#古典ビットの分岐はサポートしていませんが、出力先ビットが演算用ビットと異なるので問題ありません。\r\n\r\nSET A 1 1 1 -1\r\n#行列の定義はSETでできます。ここでは行列Aにアダマール行列を代入しています。\r\n#SETはどこに書いても構いません。最初に読みとられます。\r\n#また、定義可能なのは現在整数のみです。計算自体は文字列演算をサポートしていますが、テストが不十分のため制限しています。文法は\r\n#SET (定義する行列名。英大文字推奨) ((1,1)要素) ((1,2)要素) ((2,1)要素) ((2,2)要素)\r\n#です。分母の設定は不要です。計算後に分母は計算されます。\r\n#実際には実現不可能な値も設定出来る可能性があります。\r\n\r\nAGATE 0\r\n```\r\n## 既知の問題\r\n* C?GATE(量子制御ユニタリゲート)が正常動作しません。\r\n* 虚数の扱いで問題が生じる事があります。\r\n* 文字式計算アルゴリズムのテストが不十分で予想外の動作をする可能性があります。\r\n* エラーおよび古典ビット演算を量子回路図で適切に表示出来ません。\r\n* 量子回路図が自動的にリサイズされません。\r\n* ビット数を増やす毎に計算量が爆発的に増大します。(量子ビットでは当然ですが、古典ビットの場合も同様になる事は問題です。)\r\n* エンタングルメントを考慮した表示に対応していません。\r\n \r\n## 必須環境\r\nActive Perl等Perl5の実行環境。\r\nPlatex等texコンパイル環境。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}